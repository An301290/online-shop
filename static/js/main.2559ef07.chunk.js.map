{"version":3,"sources":["App.styles.ts","Components/Item/Item.styles.ts","Components/Item/Item.tsx","Components/CartItem/CartItem.styles.ts","Components/CartItem/CartItem.tsx","Components/Cart/Cart.styles.ts","Components/Cart/Cart.tsx","Components/NavBar/NavBar.style.ts","Components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","StyledButton","IconButton","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","ack","Nav","nav","NavBar","getProducts","a","fetch","json","App","useState","isCartOpen","setIsCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prevItem","find","CircularProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.2559ef07.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport const Wrapper = styled.div`\n  margin: 40px;\n.description {\n  display: flex;\n  color: #232F3E;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Monserrat', sans-serif;\n  padding: 20px;\n}\n`;\n\nexport const StyledButton = styled(IconButton)`\n  position: fixed;\n  z-index: 100;\n  right: 20px;\n  top: 20px;\n  color: gray;\n`;\n\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid #232F3E;\n  border-radius: 20px;\n  height: 100%;\n  button {\n    border-radius: 0 0 20px 20px;\n    color: red;\n  }\n  img {\n    max-height: 250px;\n    object-fit: contain;\n    border-radius: 20px 20px 0 0;\n  }\n  div {\n  font-family: 'Roboto', sans-serif;\n    padding: 1rem;\n    height: 100%;\n  }\n`;","import Button from '@material-ui/core/Button';\nimport { CartItemType } from \"../../App\"; \nimport { Wrapper } from \"./Item.styles\"; \n\ntype Props = {\n  item: CartItemType;\n  handleAddToCart: (clickedItem: CartItemType) => void;\n};\n\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\n  <Wrapper>\n    <img src={item.image} alt={item.title} />\n    <div>\n      <h3>{item.title}</h3>\n      <p>{item.description}</p>\n      <h3>€{item.price}</h3>\n    </div>\n    <Button onClick={() => handleAddToCart(item)}>Add to cart</Button>\n  </Wrapper>\n);\n\nexport default Item;","import styled from \"styled-components\"; \n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nfont-family:  'Roboto', sans-serif;\nborder-bottom: 1px solid gray;\npadding-bottom: 20px;\n\ndiv{\n    flex:1\n}\n\n.information, .buttons {\n    display: flex;\n    justify-content: space-around;\n}\n\nimg{\n    max-width: 80px;\n    object-fit: contain;\n    margin-left: 40px;\n}\n`; ","import Button from \"@material-ui/core/Button\";\nimport { CartItemType } from \"../../App\";\nimport Item from \"../Item/Item\";\nimport { Wrapper } from \"./CartItem.styles\";\n\ntype Props = {\n  item: CartItemType;\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n};\n\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\n  <Wrapper>\n    <div>\n      <h3>{item.title}</h3>\n      <div className=\"information\">\n        <p>Price:€{item.price}</p>\n        <p>Total:€{(item.amount * item.price).toFixed(2)}</p>\n      </div>\n      <div className=\"buttons\">\n<Button\nsize=\"small\"\ndisableElevation\nvariant=\"contained\"\nonClick={()=> removeFromCart(item.id)}\n>\n    -\n</Button>\n<p>{item.amount}</p>\n<Button\nsize=\"small\"\ndisableElevation\nvariant=\"contained\"\nonClick={()=> addToCart(item)}\n>\n    +\n</Button>\n      </div>\n    </div>\n    <img src={item.image} alt={item.title} />\n  </Wrapper>\n);\n\nexport default CartItem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.aside`\n font-family: 'Roboto', sans-serif;\n  width: 500px;\n  padding: 20px;\n.buttons {\n    display: flex;\n    justify-content: space-around;\n    \n}\n`;","import CartItem from \"../CartItem/CartItem\";\nimport { Wrapper } from \"./Cart.styles\";\nimport { CartItemType } from \"../../App\";\nimport Button from \"@material-ui/core/Button\";\n\ntype Props = {\n  cartItems: CartItemType[];\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n}; \n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\n  const calculateTotal = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0);\n\n  return (\n    <Wrapper>\n      <h2>Your Products</h2>\n      {cartItems.length === 0 ? <p>No items in cart</p> : null}\n      {cartItems.map((item) => (\n        <CartItem\n          key={item.id}\n          item={item}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      ))}\n      <h2>Total:€{calculateTotal(cartItems).toFixed(2)}</h2>\n      <div className=\"buttons\">\n        <Button\n          size=\"medium\"\n          disableElevation\n          variant=\"contained\"\n        >\n          Checkout\n        </Button>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Cart;\n","import styled from \"styled-components\";\n\nexport const Nav = styled.nav`\n  background: #232F3E;\n  height: 80px;\n  display: flex;\n  justify-content: start;\n  font-weight: 700;\n  width: 100%;\n  position: relative;\n  .main-title{\n      color: white;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  font-family: 'Montserrat', sans-serif;\n  padding: 20px;\n}\n`;","import React from \"react\";\nimport { Nav } from \"./NavBar.style\";\nimport StorefrontIcon from \"@material-ui/icons/Storefront\";\n\nconst NavBar: React.FC = () => (\n  <Nav>\n    <div className=\"main-title\">\n        <StorefrontIcon />\n      <h1>AllYouNeed</h1>\n    </div>\n  </Nav>\n);\n\nexport default NavBar;\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { Wrapper, StyledButton } from \"./App.styles\";\nimport Item from \"./Components/Item/Item\";\nimport Cart from \"./Components/Cart/Cart\";\nimport NavBar from \"./Components/NavBar/NavBar\"\n\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch(\"https://fakestoreapi.com/products\")).json();\n\nfunction App() {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    \"products\",\n    getProducts\n  );\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems((prevItem) => {\n      const isItemInCart = prevItem.find((item) => item.id === clickedItem.id);\n      if (isItemInCart) {\n        return prevItem.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      return [...prevItem, { ...clickedItem, amount: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems((prevItem) =>\n      prevItem.reduce((ack, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return ack;\n          return [...ack, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...ack, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  if (isLoading) return <CircularProgress />;\n  if (error) return <div>Somethin went wrong while loading</div>;\n\n  return (\n    <>\n    <NavBar/>\n    <Wrapper>\n      <h2 className=\"description\">Find the products you want</h2>\n      <Drawer\n        anchor=\"right\"\n        open={isCartOpen}\n        onClose={() => setIsCartOpen(false)}\n      >\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setIsCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n</>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}